<Activity mc:Ignorable="sap sap2010" x:Class="Population_density" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1360,3407" sap2010:WorkflowViewState.IdRef="Population_density_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.ComponentModel;assembly=System" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="34">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="31">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Population_density" sap:VirtualizedContainerService.HintSize="1370,3342" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Default="D:\Uipath\Uipath_9Use-Cases\Sheet\4-Excel-and-Datatables-Countries.xlsx" Name="strExcelPath" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtRedCountries" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:BuildDataTable DataTable="[dtRedCountries]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="1328,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xD;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xD;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xD;&#xA;      &lt;xs:complexType&gt;&#xD;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xD;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xD;&#xA;            &lt;xs:complexType&gt;&#xD;&#xA;              &lt;xs:sequence&gt;&#xD;&#xA;                &lt;xs:element name=&quot;RedCountries&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;              &lt;/xs:sequence&gt;&#xD;&#xA;            &lt;/xs:complexType&gt;&#xD;&#xA;          &lt;/xs:element&gt;&#xD;&#xA;        &lt;/xs:choice&gt;&#xD;&#xA;      &lt;/xs:complexType&gt;&#xD;&#xA;    &lt;/xs:element&gt;&#xD;&#xA;  &lt;/xs:schema&gt;&#xD;&#xA;&lt;/NewDataSet&gt;" />
    <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="1328,3151" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_1" ShowExcelWindow="False">
      <ueab:ExcelProcessScopeX.Body>
        <ActivityAction x:TypeArguments="ui:IExcelProcess">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="1294,3065" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="sd:DataTable" Name="dtCountries" />
              <Variable x:TypeArguments="x:Int32" Name="intIndex" />
              <Variable x:TypeArguments="x:Double" Name="douDensity" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" CreateNewFile="False" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="1252,2973" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None" WorkbookPath="[strExcelPath]">
              <ueab:ExcelApplicationCard.Body>
                <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="1218,2707" sap2010:WorkflowViewState.IdRef="Sequence_3">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ueab:ReadRangeX DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="1176,167" sap2010:WorkflowViewState.IdRef="ReadRangeX_1" Range="[Excel.Sheet(&quot;Countries&quot;)]" SaveTo="[dtCountries]" />
                    <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="[intIndex]" DataTable="[dtCountries]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="1176,1660" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                      <ui:ForEachRow.Body>
                        <ActivityAction x:TypeArguments="sd:DataRow">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="Row" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="1142,1546" sap2010:WorkflowViewState.IdRef="Sequence_4">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="1100,60" sap2010:WorkflowViewState.IdRef="Assign_1">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Double">[douDensity]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Double">[Convert.ToDouble(Row.Item("Population"))/ Convert.ToDouble(Row.Item("Area"))]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ueab:WriteCellX Cell="[Excel.Sheet(&quot;Countries&quot;).Cell(&quot;D&quot; + (intIndex + 2).ToString)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="1100,157" sap2010:WorkflowViewState.IdRef="WriteCellX_1" Value="[douDensity.ToString]" />
                            <If Condition="[douDensity &lt;30]" sap:VirtualizedContainerService.HintSize="1100,1157" sap2010:WorkflowViewState.IdRef="If_2">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="481,229" sap2010:WorkflowViewState.IdRef="Sequence_5">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ueab:FormatRangeX DisplayName="Format Cells" sap:VirtualizedContainerService.HintSize="439,137" sap2010:WorkflowViewState.IdRef="FormatRangeX_4" Range="[Excel.Sheet(&quot;Countries&quot;).Range(&quot;D&quot;+ (intIndex+2).ToString +&quot;:D&quot; + (intIndex+2).ToString)]">
                                    <ueab:FormatRangeX.Alignment>
                                      <ui:AlignmentOptions HorizontalAlignment="xlHAlignGeneral" VerticalAlignment="xlVAlignBottom" WrapText="False" />
                                    </ueab:FormatRangeX.Alignment>
                                    <ueab:FormatRangeX.Font>
                                      <ui:FontOptions Color="Black" FillColor="Green" FontFamilyName="Calibri" Size="11" Style="Regular" />
                                    </ueab:FormatRangeX.Font>
                                    <ueab:FormatRangeX.Format>
                                      <ueab:GeneralFormat />
                                    </ueab:FormatRangeX.Format>
                                  </ueab:FormatRangeX>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence sap:VirtualizedContainerService.HintSize="574,1000" sap2010:WorkflowViewState.IdRef="Sequence_6">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:IfElseIf DisplayName="Else If" sap:VirtualizedContainerService.HintSize="532,908" sap2010:WorkflowViewState.IdRef="IfElseIf_2">
                                    <ui:IfElseIf.ConditionBlocks>
                                      <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                                        <ui:IfElseIfBlock BlockType="If" Condition="[douDensity &gt;=30 And douDensity&lt;100]">
                                          <ui:IfElseIfBlock.Then>
                                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="481,229" sap2010:WorkflowViewState.IdRef="Sequence_7">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ueab:FormatRangeX DisplayName="Format Cells" sap:VirtualizedContainerService.HintSize="439,137" sap2010:WorkflowViewState.IdRef="FormatRangeX_5" Range="[Excel.Sheet(&quot;Countries&quot;).Range(&quot;D&quot;+ (intIndex+2).ToString +&quot;:D&quot; + (intIndex+2).ToString)]">
                                                <ueab:FormatRangeX.Alignment>
                                                  <ui:AlignmentOptions HorizontalAlignment="xlHAlignGeneral" VerticalAlignment="xlVAlignBottom" WrapText="False" />
                                                </ueab:FormatRangeX.Alignment>
                                                <ueab:FormatRangeX.Font>
                                                  <ui:FontOptions Color="Black" FillColor="Yellow" FontFamilyName="Calibri" Size="11" Style="Regular" />
                                                </ueab:FormatRangeX.Font>
                                                <ueab:FormatRangeX.Format>
                                                  <ueab:GeneralFormat />
                                                </ueab:FormatRangeX.Format>
                                              </ueab:FormatRangeX>
                                            </Sequence>
                                          </ui:IfElseIfBlock.Then>
                                        </ui:IfElseIfBlock>
                                        <ui:IfElseIfBlock BlockType="Else">
                                          <ui:IfElseIfBlock.Then>
                                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="481,454" sap2010:WorkflowViewState.IdRef="Sequence_8">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ueab:FormatRangeX DisplayName="Format Cells" sap:VirtualizedContainerService.HintSize="439,137" sap2010:WorkflowViewState.IdRef="FormatRangeX_6" Range="[Excel.Sheet(&quot;Countries&quot;).Range(&quot;D&quot;+ (intIndex+2).ToString +&quot;:D&quot; + (intIndex+2).ToString)]">
                                                <ueab:FormatRangeX.Alignment>
                                                  <ui:AlignmentOptions HorizontalAlignment="xlHAlignGeneral" VerticalAlignment="xlVAlignBottom" WrapText="False" />
                                                </ueab:FormatRangeX.Alignment>
                                                <ueab:FormatRangeX.Font>
                                                  <ui:FontOptions Color="Black" FillColor="Red" FontFamilyName="Calibri" Size="11" Style="Regular" />
                                                </ueab:FormatRangeX.Font>
                                                <ueab:FormatRangeX.Format>
                                                  <ueab:GeneralFormat />
                                                </ueab:FormatRangeX.Format>
                                              </ueab:FormatRangeX>
                                              <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{Row.Item(&quot;Country&quot;).ToString}]" DataTable="[dtRedCountries]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="439,185" sap2010:WorkflowViewState.IdRef="AddDataRow_1" />
                                            </Sequence>
                                          </ui:IfElseIfBlock.Then>
                                        </ui:IfElseIfBlock>
                                      </sc:BindingList>
                                    </ui:IfElseIf.ConditionBlocks>
                                  </ui:IfElseIf>
                                </Sequence>
                              </If.Else>
                            </If>
                          </Sequence>
                        </ActivityAction>
                      </ui:ForEachRow.Body>
                    </ui:ForEachRow>
                    <ueab:WriteRangeX Destination="[Excel.Sheet(&quot;RedCountries&quot;)]" DisplayName="Write DataTable to Excel" sap:VirtualizedContainerService.HintSize="1176,157" sap2010:WorkflowViewState.IdRef="WriteRangeX_1" IgnoreEmptySource="False" Source="[dtRedCountries]" />
                    <ueab:WriteCellX Cell="[Excel.Sheet(&quot;Countries&quot;).Cell(&quot;D1&quot;)]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="1176,157" sap2010:WorkflowViewState.IdRef="WriteCellX_2" Value="[&quot;PopulationDensity&quot;]" />
                    <ueab:FormatRangeX DisplayName="Format Cells" sap:VirtualizedContainerService.HintSize="1176,137" sap2010:WorkflowViewState.IdRef="FormatRangeX_7" Range="[Excel.Sheet(&quot;Countries&quot;).Range(&quot;A1:D1&quot;)]">
                      <ueab:FormatRangeX.Alignment>
                        <ui:AlignmentOptions HorizontalAlignment="xlHAlignGeneral" VerticalAlignment="xlVAlignBottom" WrapText="False" />
                      </ueab:FormatRangeX.Alignment>
                      <ueab:FormatRangeX.Font>
                        <ui:FontOptions Color="Black" FillColor="Transparent" FontFamilyName="Calibri" Size="11" Style="Bold" />
                      </ueab:FormatRangeX.Font>
                      <ueab:FormatRangeX.Format>
                        <ueab:GeneralFormat />
                      </ueab:FormatRangeX.Format>
                    </ueab:FormatRangeX>
                    <ueab:FormatRangeX DisplayName="Format Cells" sap:VirtualizedContainerService.HintSize="1176,137" sap2010:WorkflowViewState.IdRef="FormatRangeX_8" Range="[Excel.Sheet(&quot;RedCountries&quot;).Range(&quot;A1:A1&quot;)]">
                      <ueab:FormatRangeX.Alignment>
                        <ui:AlignmentOptions HorizontalAlignment="xlHAlignGeneral" VerticalAlignment="xlVAlignBottom" WrapText="False" />
                      </ueab:FormatRangeX.Alignment>
                      <ueab:FormatRangeX.Font>
                        <ui:FontOptions Color="Black" FillColor="Transparent" FontFamilyName="Calibri" Size="11" Style="Bold" />
                      </ueab:FormatRangeX.Font>
                      <ueab:FormatRangeX.Format>
                        <ueab:GeneralFormat />
                      </ueab:FormatRangeX.Format>
                    </ueab:FormatRangeX>
                  </Sequence>
                </ActivityAction>
              </ueab:ExcelApplicationCard.Body>
            </ueab:ExcelApplicationCard>
          </Sequence>
        </ActivityAction>
      </ueab:ExcelProcessScopeX.Body>
    </ueab:ExcelProcessScopeX>
  </Sequence>
</Activity>